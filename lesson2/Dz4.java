package org.example.HomeWork.lesson2;

public class Dz4 {
    public static void main(String[] args) {
        char[][] board = {
                {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
                {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
                {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
                {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
                {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
                {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
                {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
                {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
                {'.', '.', '.', '.', '8', '.', '.', '7', '9'}};

        System.out.println("Validete:" + isValidSudoku(board));


    }

    /**
     * @apiNote 4)(*) Отвалидировать доску судоку
     *     Требования
     *         Объявлена доска 9 x 9 необходимо отвалидировать в соответствии с правилами
     *         1.	Каждая строка должна содержать цифру 1-9 без повторения
     *         2.	Каждая колонка должна содержать цифру 1-9 без повторения
     *         3.	Каждый под блок из 9 элементов 3 x 3 должна содержать цифру 1-9 без повторения
     *         Ограничения
     *         •	board.length == 9
     *         •	board[i].length == 9
     *         •	board[i][j] значение число или '.'
     * @param board двухмерный массив символов
     * @return результат
     */
    private static boolean isValidSudoku(char[][] board) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (board[i][j] != '.') {
                    int tmp = 0;
                    int tmp1 = 0;
                    for (char el : board[i]) {
                        if (board[i][j] == el) {
                            tmp++;
                        }
                    }
                    for (int k = 0; k < 9; k++) {
                        if (board[i][j] == board[k][j]) {
                            tmp1++;
                        }
                    }
                    if (tmp > 1 || tmp1 > 1) {
                        return false;
                    }
                }
            }

        }
        return true;
    }
}